import{_ as t,r as i,o as s,c as d,a as o,b as n,e as r,d as e}from"./app.effe2eb5.js";const c={},l=r('<h1 id="go-\u8BED\u8A00\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#go-\u8BED\u8A00\u89C4\u8303" aria-hidden="true">#</a> Go \u8BED\u8A00\u89C4\u8303</h1><h2 id="_2022-\u5E74-3-\u6708-10-\u65E5\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#_2022-\u5E74-3-\u6708-10-\u65E5\u7248\u672C" aria-hidden="true">#</a> 2022 \u5E74 3 \u6708 10 \u65E5\u7248\u672C</h2><h2 id="\u5F15\u8A00" tabindex="-1"><a class="header-anchor" href="#\u5F15\u8A00" aria-hidden="true">#</a> \u5F15\u8A00</h2>',3),h=e("\u8FD9\u662F Go \u8BED\u8A00\u7684\u53C2\u8003\u624B\u518C\u3002 Go1.18 \u4E4B\u524D\uFF0C\u6CA1\u6709\u6CDB\u578B\u7684\u7248\u672C\uFF0C\u53EF\u4EE5\u5728"),u={href:"https://go.dev/doc/go1.17_spec.html",target:"_blank",rel:"noopener noreferrer"},p=e("\u8FD9\u91CC"),m=e("\u627E\u5230\u3002\u8BF7\u67E5\u770B "),v={href:"https://go.dev/",target:"_blank",rel:"noopener noreferrer"},_=e("golang.org"),g=e(" \u83B7\u53D6\u5176\u5B83\u6587\u6863\u548C\u66F4\u591A\u4FE1\u606F\u3002"),f=r(`<p>Go \u662F\u4E00\u79CD\u5728\u8BBE\u8BA1\u65F6\u5C31\u8003\u8651\u5230\u7CFB\u7EDF\u53D8\u6210\u7684\u901A\u7528\u8BED\u8A00\u3002\u5F3A\u7C7B\u578B\u3001\u5783\u573E\u56DE\u6536\u3001\u660E\u786E\u652F\u6301\u5E76\u53D1\u7F16\u7A0B\u3002\u7A0B\u5E8F\u7531 package \u6784\u6210\u3002\u5176\u5C5E\u6027\u80FD\u591F\u6709\u6548\u7BA1\u7406\u4F9D\u8D56\u5173\u7CFB\u3002</p><p>\u8BED\u6CD5\u7D27\u51D1\u4E14\u6613\u4E8E\u89E3\u6790\uFF0C\u5141\u8BB8\u901A\u8FC7 IDE \u7B49\u81EA\u52A8\u5316\u5DE5\u5177\u8F7B\u677E\u5206\u6790\u3002</p><h2 id="\u6807\u8BB0" tabindex="-1"><a class="header-anchor" href="#\u6807\u8BB0" aria-hidden="true">#</a> \u6807\u8BB0</h2><p>\u8BED\u6CD5\u4F7F\u7528\u6269\u5C55\u5DF4\u79D1\u65AF\u8303\u5F0F\uFF08EBNF\uFF09\u6307\u5B9A\uFF1A</p><div class="language-grammar ext-grammar line-numbers-mode"><pre class="language-grammar"><code>Production  = production_name &quot;=&quot; [ Expression ] &quot;.&quot; .
Expression  = Alternative { &quot;|&quot; Alternative } .
Alternative = Term { Term } .
Term        = production_name | token [ &quot;\u2026&quot; token ] | Group | Option | Repetition .
Group       = &quot;(&quot; Expression &quot;)&quot; .
Option      = &quot;[&quot; Expression &quot;]&quot; .
Repetition  = &quot;{&quot; Expression &quot;}&quot; .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Productions are expressions constructed from terms and the following operators, in increasing precedence:</p><div class="language-grammar ext-grammar line-numbers-mode"><pre class="language-grammar"><code>|   alternation
()  grouping
[]  option (0 or 1 times)
{}  repetition (0 to n times)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lower-case production names are used to identify lexical tokens. Non-terminals are in CamelCase. Lexical tokens are enclosed in double quotes <code>&quot;&quot;</code> or back quotes <code>\`\`</code> .</p><p>The form <code>a \u2026 b</code> represents the set of characters from <code>a</code> through <code>b</code> as alternatives. The horizontal ellipsis <code>\u2026</code> is also used elsewhere in the spec to informally denote various enumerations or code snippets that are not further specified. The character <code>\u2026</code> (as opposed to the three characters <code>...</code>) is not a token of the Go language.</p><h2 id="\u6E90\u4EE3\u7801\u8868\u793A" tabindex="-1"><a class="header-anchor" href="#\u6E90\u4EE3\u7801\u8868\u793A" aria-hidden="true">#</a> \u6E90\u4EE3\u7801\u8868\u793A</h2><p>// TODO</p><h2 id="\u8BCD\u6CD5\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u8BCD\u6CD5\u5143\u7D20" aria-hidden="true">#</a> \u8BCD\u6CD5\u5143\u7D20</h2><p>// TODO</p><h2 id="\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5E38\u91CF" aria-hidden="true">#</a> \u5E38\u91CF</h2><p>\u5E38\u91CF\u6709 <code>bool \u5E38\u91CF</code>\u3001<code>rune \u5E38\u91CF</code>\u3001<code>int \u5E38\u91CF</code>\u3001<code>float-point \u5E38\u91CF</code>\u3001<code>complex \u5E38\u91CF</code> \u548C <code>string \u5E38\u91CF</code>\u3002rune\u3001int\u3001float-point \u548C complex \u5E38\u91CF\u901A\u79F0\u4E3A\u6570\u503C\u5E38\u91CF\u3002</p>`,15);function b(x,q){const a=i("ExternalLinkIcon");return s(),d("div",null,[l,o("p",null,[h,o("a",u,[p,n(a)]),m,o("a",v,[_,n(a)]),g]),f])}var E=t(c,[["render",b],["__file","specification.html.vue"]]);export{E as default};
